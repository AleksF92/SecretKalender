<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_D6_Enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
image_speed = 0;
level = 1;
xpYield = 0;
hpMax = 0;
hp = 0;
damage = 0;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take damage cd
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate stats
xpYield = 25 * (level * level);
hpMax = 10 * level;
hp = hpMax;
damage = level * level;

alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Events
if (hpMax &gt; 0) {
    var returnToMap = false;
    
    if (hp &gt; 0) {
        if (!alarm[1]) {
            //Attack
            if (distance_to_object(D6_Aleks) &lt;= 64 &amp;&amp; !D6_Aleks.alarm[0]) {
                D6_Aleks.alarm[0] = room_speed;
                D6_Aleks.hp -= damage;
                if (D6_Aleks.hp &lt;= 0) {
                    //Dead
                    D6_Aleks.hp = 0;
                    D6_Aleks.xLives--;
                    if (D6_Aleks.xLives &lt;= 0) {
                        //Loose
                        dialog_show("Fail");
                    }
                    
                    returnToMap = true;
                }
            }
            alarm[1] = room_speed;
        }
        
        //Gravity
        y += 12;
        var groundY = room_height - (64 * 2);
        if (y &gt; groundY) { y = groundY; }
    }
    else {
        hp = 0;
    
        //Gain experience
        D6_Aleks.xp += xpYield;
        if (D6_Aleks.xp &gt;= D6_Aleks.xpMax) {
            //Level up
            D6_Aleks.level++;
            D6_Aleks.xp -= D6_Aleks.xpMax;
            D6_Aleks.xpMax *= D6_Aleks.xpMod;
            D6_Aleks.hpMax = 10 * level;
            D6_Aleks.hp = D6_Aleks.hpMax;
        }
        
        //Die
        if (instance_number(D6_Enemy) &gt; 1) {
            instance_destroy();
        }
        else {
            //Win
            returnToMap = true;
        }
    }
    
    if (returnToMap) {
        //Go to map
        D6_Aleks.combat = false;
        background_visible[0] = true;
        D6_Aleks.hp = D6_Aleks.hpMax;
        
        with (D6_ActionPoint) {
            visible = true;
            if (selected) {
                D6_Aleks.x = x;
                D6_Aleks.y = y;
                
                if (instance_number(D6_Enemy) &lt;= 1) {
                    won = true;
                }
            }
        }
        
        if (level == 10) {
            dialog_show("Win");
        }
        
        instance_deactivate_object(D6_Sword);
        instance_deactivate_object(D6_Enemy);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw hp
if (hpMax &gt; 0) {
    //Draw hp frame
    var hpw = 64;
    var hpx1 = x - (hpw / 2);
    var hpy1 = y - 48;
    var hpy2 = hpy1 + 8;
    draw_set_colour(c_white);
    draw_rectangle(hpx1, hpy1, hpx1 + hpw, hpy2, false);
    
    //Draw hp progress
    var progress = hp / hpMax;
    draw_set_colour(c_red);
    draw_rectangle(hpx1, hpy1, hpx1 + (hpw * progress), hpy2, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
