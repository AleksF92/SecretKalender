<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
swapCount = 3;
swaps = 0;
swapSpeed = 8;
roundDone = true;
gameDone = false;
rounds = 0;
paths = 0;
dewGoal = 15;

posL = 192;
posC = 512;
posR = 832;
posM = 384 + 32;

liftHeight = 64 * 3;
liftTime = room_speed * 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wait for dew display
if (Dialog.active) {
    alarm[0] = 1;
}
else {
    with (D12_Cup) {
        if (showing) {
            y += D12_Game.liftHeight;
            showing = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Events
if (!Dialog.active &amp;&amp; paths == 0) {
    if (gameDone) {
        room_goto(rom_Calendar);
    }

    if (swaps == 0) {
        if (!alarm[0] &amp;&amp; roundDone) {
            //Done swapping
            swaps = swapCount;
            roundDone = false;
            
            //Put dew in center
            with (D12_Cup) { hasDew = false; }
            var cupC = instance_nearest(posC, posM, D12_Cup);
            cupC.hasDew = true;
            cupC.y -= liftHeight;
            cupC.showing = true;
            alarm[0] = liftTime;
        }
    }
    else {
        if (!alarm[0]) {
            //Select two random cups
            var cup1 = noone;
            var cup2 = noone;
            while (cup1 == cup2) {
                cup1 = instance_nearest(choose(posL, posC, posR), posM, D12_Cup);
                cup2 = instance_nearest(choose(posL, posC, posR), posM, D12_Cup);
            }

            //Assign correct paths
            var pat1 = noone;
            var pat2 = noone;
            
            var distL1 = max(cup1.x - posL, posL - cup1.x);
            var distC1 = max(cup1.x - posC, posC - cup1.x);
            var distR1 = max(cup1.x - posR, posR - cup1.x);
            
            var distL2 = max(cup2.x - posL, posL - cup2.x);
            var distC2 = max(cup2.x - posC, posC - cup2.x);
            var distR2 = max(cup2.x - posR, posR - cup2.x);
            
            var tresh = 1;
            
            if (distL1 &lt; tresh &amp;&amp; distC2 &lt; tresh) {
                //Left &amp; Center
                pat1 = pat_D12_LC_Forward;
                pat2 = pat_D12_LC_Backward;
            }
            else if (distL2 &lt; tresh &amp;&amp; distC1 &lt; tresh) {
                //Left &amp; Center (Backwards)
                pat1 = pat_D12_LC_Backward;
                pat2 = pat_D12_LC_Forward;
            }
            else if (distC1 &lt; tresh &amp;&amp; distR2 &lt; tresh) {
                //Center &amp; Right
                pat1 = pat_D12_CR_Forward;
                pat2 = pat_D12_CR_Backward;
            }
            else if (distC2 &lt; tresh &amp;&amp; distR1 &lt; tresh) {
                //Center &amp; Right (Backwards)
                pat1 = pat_D12_CR_Backward;
                pat2 = pat_D12_CR_Forward;
            }
            else if (distL1 &lt; tresh &amp;&amp; distR2 &lt; tresh) {
                //Center &amp; Right
                pat1 = pat_D12_LR_Forward;
                pat2 = pat_D12_LR_Backward;
            }
            else if (distL2 &lt; tresh &amp;&amp; distR1 &lt; tresh) {
                //Center &amp; Right (Backwards)
                pat1 = pat_D12_LR_Backward;
                pat2 = pat_D12_LR_Forward;
            }

            if (pat1 != noone &amp;&amp; pat2 != noone) {
                //Start path
                //show_message("[Cup 1 - " + string(cup1) + "]#Path: " + string(pat1));
                //show_message("[Cup 1 - " + string(cup2) + "]#Path: " + string(pat2));
                with (cup1) { path_start(pat1, D12_Game.swapSpeed, path_action_stop, true); }
                with (cup2) { path_start(pat2, D12_Game.swapSpeed, path_action_stop, true); }
                paths = 2;
                swaps--;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw dew count
if (!Dialog.active) {
    draw_set_font(fnt_Arial_Medium);
    draw_set_colour(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_text(room_width / 2, room_height - 64, "Mnt. Dew: " + string(rounds) + " / " + string(dewGoal));
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
