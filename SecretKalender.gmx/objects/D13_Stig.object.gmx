<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_D13_Stig</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
image_speed = 0;

moveSpeed = 8;
fallSpeed = 0;
worldX = x;
jumpForce = 22;
canJump = false;
spinning = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spin cooldown
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spin duration
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Events

//Find first ground below
var platform = collision_point(x, y + 1, D13_Box, false, true);
if (platform == noone) {
    platform = collision_point(x, y + 1, D13_Ground, true, true);
}

//Apply gravity
if (platform == noone) {
    fallSpeed = clamp(fallSpeed + 1, fallSpeed, 30);
    y += fallSpeed;
    image_speed = 0;
}
else {
    fallSpeed = 0;
    canJump = true;
    while (collision_point(x, y - 1, platform, true, true)) { y -= 1; }
}

if (!Dialog.active) {
    //Movements
    var moveX = keyboard_check(ord("D")) - keyboard_check(ord("A"));
    if (moveX != 0) {
        image_xscale = moveX;
        
        var moveAmount = moveSpeed * moveX;
        if (collision_line(x + moveAmount, y - 8, x + moveAmount, y - (sprite_height / 2), D13_Box, false, true)) {
            moveAmount = 0;
        }
        
        var newWorldX = worldX + moveAmount;
        if (newWorldX &gt; 0 &amp;&amp; newWorldX &lt; D13_Game.spawnX) {
            //Move world
            worldX += moveAmount;
            for (var i = 0; i &lt; instance_number(D13_Ground); i++) {
                var ground = instance_find(D13_Ground, i);
                ground.x -= moveAmount;
            }
            for (var i = 0; i &lt; instance_number(D13_Ground_Filler); i++) {
                var filler = instance_find(D13_Ground_Filler, i);
                filler.x -= moveAmount;
            }
            for (var i = 0; i &lt; instance_number(D13_Box); i++) {
                var box = instance_find(D13_Box, i);
                box.x -= moveAmount;
            }
        }
    }
    if (canJump) {
        image_speed = (1 / room_speed) * 10 * max(moveX, -moveX);
    }
    
    //Jump
    if (canJump &amp;&amp; keyboard_check(vk_space)) {
        canJump = false;
        fallSpeed = -jumpForce;
        y += fallSpeed;
        scr_sound(snd_D13_Jump);
    }
    
    //Spin
    if ((!alarm[1] &amp;&amp; mouse_check_button(mb_left)) || (alarm[0])) {
        if (!spinning) {
            sprite_index = spr_D13_Stig_Spin;
            spinning = true;
            alarm[0] = room_speed;
            alarm[1] = room_speed * 1.25;
            scr_sound(snd_D13_Spin);
        }
        image_speed = (1 / room_speed) * 16;
    }
    else {
        if (spinning) {
            sprite_index = spr_D13_Stig;
            spinning = false;
        }
    }
}
else {
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="D3_Boom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Die
if (!D13_Game.gameDone) {
    D13_Game.gameDone = true;
    dialog_show("Fail");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw debug
/*
draw_set_font(fnt_Arial_Small);
draw_set_colour(c_white);
draw_text(room_width / 2, 16,
    "X: " + string(worldX - x)
    + "#Fillers: " + string(instance_number(D13_Ground_Filler))
    + "#Grid Slot: " + string(worldX div sprite_get_width(spr_D13_Ground))
);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
