<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
gameDone = false;
scr_music(bgm_D22);

maxWords = 5;
quickDelay = room_speed * 0.25;
longDelay = room_speed * 3;
held = noone;
delay = 0;

mainTimerY = 64 + 32;
timerY = mainTimerY + 32;
cvs = 0;
cvReq = 10;
cvTime = room_speed * (cvReq * 30);
alarm[1] = cvTime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///You done fuckd up
if (!gameDone) {
    gameDone = true;
    dialog_show("Fail: Timeout");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn word
var rx = random_int(64, room_width / 2);
var ry = random_int(64 + (64 * 2), room_height - 64);
var word = instance_create(rx, ry, D22_Word);

//Set next spawn timer
delay = quickDelay;
if (instance_number(D22_Word) &gt;= maxWords) {
    delay = longDelay;
}
alarm[0] = delay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Events
if (!Dialog.active) {
    if (gameDone) {
        room_goto(rom_Calendar);
    }
    else {
        //Check for win
        if (cvs &gt;= cvReq) {
            gameDone = true;
            dialog_show("Win");
        }
    
        if (!alarm[0]) { alarm[0] = 1; }
        else {
            if (instance_number(D22_Word) &lt; maxWords) {
                if (alarm[0] &gt; quickDelay) { alarm[0] = quickDelay; }
            }
        }   
    }
}
else if (alarm[0]) {
    alarm[0] += 1;
    alarm[1] += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw spawn timer
if (alarm[0]) {
    var w = 256;
    var h = 20;
    var bx = (room_width / 2 / 2) - (w / 2);
    var by = timerY;
    
    draw_set_colour(c_white);
    draw_rectangle(bx, by, bx + w, by + h, false);
    var prog = alarm[0] / delay;
    draw_set_colour(c_orange);
    draw_rectangle(bx, by, bx + (w * prog), by + h, false);
    
    draw_set_font(fnt_Arial_Small);
    draw_set_colour(c_black);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_text(bx + (w / 2), by + (h / 2), "Tid til neste ord");
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw timeout timer
if (alarm[0]) {
    var w = 256 * 3;
    var h = 20;
    var bx = (room_width / 2) - (w / 2);
    var by = mainTimerY;
    
    draw_set_colour(c_white);
    draw_rectangle(bx, by, bx + w, by + h, false);
    var prog = alarm[1] / cvTime;
    draw_set_colour(c_aqua);
    draw_rectangle(bx, by, bx + (w * prog), by + h, false);
    
    draw_set_font(fnt_Arial_Small);
    draw_set_colour(c_black);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_text(bx + (w / 2), by + (h / 2), "Tid som gjenstår. Søknader: " + string(cvs) + " / " + string(cvReq));
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
