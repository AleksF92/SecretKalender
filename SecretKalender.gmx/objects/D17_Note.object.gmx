<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
moveSpeed = 4;
col = c_white;
dur = 0;
hit = false;
good = false;
bad = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Events
if (D17_Game.playingGuitar) {
    x -= moveSpeed;
    
    if (!(good || bad)) {
        if (x &lt; D17_Game.xMin) {
            if (hit &amp;&amp; dur &lt; 0) {
                good = true;
            }
            else if (hit &amp;&amp; x + dur &lt; D17_Game.xMin) {
                good = true;
            }
            else if (!hit) {
                //Missed
                hit = true;
                bad = true;
                audio_master_gain(D17_Game.lowVolume);
                //D17_Game.hp -= 1;
            }
            else if (dur &gt; 0) { D17_Game.noteScore += 2; }
        }
    }
    
    if (x + dur &lt; -32) {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw with color

var longCol = noone;
var noteCol = col;
if (hit &amp;&amp; !(good || bad)) {
    //Long note held
    longCol = col;
    noteCol = c_white;
}
else if (good) {
    //Note hit
    noteCol = c_white;
}
else if (bad) {
    //Note missed
    noteCol = c_black;
}


//Draw line
if (dur &gt; 0) {
    //Draw line build
    if (longCol == col) {
        //Draw line
        draw_set_colour(longCol);
        draw_line_width(x + 16, y, x + dur, y, 16);
    
        //Draw line build
        draw_set_colour(noteCol);
        var centerX = D17_Game.xMin + ((D17_Game.xMax - D17_Game.xMin) / 2);
        if (x + dur &gt; centerX) {
            draw_line_width(x + 16, y, centerX, y, 16);
        }
    }
    else {
        //Draw line
        draw_set_colour(noteCol);
        draw_line_width(x + 16, y, x + dur, y, 16);
    }
}

//Draw note
draw_set_colour(noteCol);
draw_sprite_ext(sprite_index, 0, x, y, 1, 1, 0, noteCol, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
