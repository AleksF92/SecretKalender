<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Face_Kristian</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
var hw = sprite_width / 2;
var hh = sprite_height / 2;
wallLeft = 64 + hw;
wallRight = room_width - 64 - hw;
wallTop = (64 * 2) + hh;
wallBottom = room_height - 64 - hh;
moveSpeed = 8;
gameDone = false;

event = "Dinkel Intro";

hasRock = false;
infoRock = true;
infoHit = true;
scr_music(noone);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Events
if (!Dialog.active) {
    if (gameDone) {
        room_goto(rom_Calendar);
    }

    if (event == "Dinkel Intro") {
        event = "Wait";
        dialog_show("Dinkel");
        with (D11_Dinkel) { path_start(pat_D11_Dinkel0, moveSpeed, path_action_stop, true); }
        D11_Dinkel.visible = true;
        scr_music(bgm_D11);
    }
    else if (event == "Wait") {
        
    }
    else {
        //Movement
        var moveX = keyboard_check(ord("D")) - keyboard_check(ord("A"));
        var moveY = keyboard_check(ord("S")) - keyboard_check(ord("W"));
        if (moveX != 0) {
            x += moveSpeed * moveX;
            if (x &lt; wallLeft) { x = wallLeft; }
            else if (x &gt; wallRight) { x = wallRight; }
            if (moveX &lt; 0) { dir = 180; }
            else if (moveX &gt; 0) { dir = 0; }
        }
        if (moveY != 0) {
            y += moveSpeed * moveY;
            if (y &lt; wallTop) { y = wallTop; }
            else if (y &gt; wallBottom) { y = wallBottom; }
            if (moveY &lt; 0) { dir = 90; }
            else if (moveY &gt; 0) { dir = 270; }
        }
    }
    
    if (event == "Dinkel Murder") {
        //Move dinkel to start pos
        with (D11_Dinkel) {
            var sx = path_get_point_x(pat_D11_Dinkel1, 0);
            var sy = path_get_point_y(pat_D11_Dinkel1, 0);
            move_towards_point(sx, sy, moveSpeed);
            
            if (distance_to_point(sx, sy) &lt; 1) {
                //Start fight
                alarm[0] = 1;
                D11_Kristian.event = "Done";
                booted = true;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="D11_Rock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pick up
if (!hasRock) {
    hasRock = true;
    with (other) { instance_destroy(); }
    
    if (infoRock) {
        dialog_show("Info: Rock");
        infoRock = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Throw rock
if (hasRock) {
    var throw = instance_create(x, y - 64, D11_Throw);
    throw.image_angle = point_direction(x, y - 64, mouse_x, mouse_y);
    hasRock = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw with rock
draw_self();

if (hasRock) {
    draw_sprite(spr_D11_Rock, 0, x, y - 64);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
