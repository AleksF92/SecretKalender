<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Day</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
day = 0; //Must be initialized with creation code
btnState = BTN_DISABLED;
sprColor = c_gray;
frameColor = c_dkgray;
right = x + sprite_width;
bottom = y + sprite_height;
textOffset = 16;
frameWidth = 4;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Events
if (btnState == BTN_DISABLED) {
    //Check if existing day
    if (Game.days &gt;= day) {
        if (!room_exists(room + day)) {
            frameColor = c_red;
        }
    
        //Check if room is available yet
        if (Game.today == day) {
            btnState = BTN_TODAY;
            sprite_index = spr_Today;
            sprColor = c_white;
        }
        else if (Game.today &gt; day) {
            btnState = BTN_ENABLED;
            sprColor = c_white;
        }
        else {
            //Day exists, but not available
            frameColor = c_navy;
        }
    }
}
else if (!Dialog.active) {
    if (room_exists(room + day)) {
        //Reset color
        frameColor = c_white;
    
        //Check if mouse is inside button
        if (mouse_x &gt;= x &amp;&amp; mouse_x &lt;= right) {
            if (mouse_y &gt;= y &amp;&amp; mouse_y &lt;= bottom) {
                frameColor = c_lime;
                
                //Check for click
                if (mouse_check_button_pressed(mb_left)) {
                    room_goto(room + day);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

//Draw sprite
draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, sprColor, 1);

//Draw day number
if (day) {
    draw_set_halign(fa_right);
    draw_set_valign(fa_bottom);
        draw_set_colour(c_white);
        draw_set_font(fnt_Arial_Big);
        draw_text(right - textOffset, bottom - textOffset, string(day));
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}

//Draw frame
draw_set_colour(frameColor);
draw_line_width(x, y, right, y, frameWidth);
draw_line_width(right, y, right, bottom, frameWidth);
draw_line_width(right, bottom, x, bottom, frameWidth);
draw_line_width(x, bottom, x, y, frameWidth);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
